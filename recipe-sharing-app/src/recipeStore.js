// src/recipeStore.js

// Import the 'create' function from zustand to define our store.
import { create } from 'zustand';

// Define the Zustand store for managing recipes.
// 'create' takes a function that returns an object representing the store's state and actions.
const useRecipeStore = create((set) => ({
  // 'recipes' is the state variable, initialized as an empty array.
  recipes: [],

  // 'addRecipe' is an action (a function) that updates the 'recipes' state.
  // It takes a 'newRecipe' object as an argument.
  // 'set' is the function provided by Zustand to update the state.
  // We use a functional update (state => ...) to ensure we're working with the latest state.
  addRecipe: (newRecipe) =>
    set((state) => ({
      recipes: [...state.recipes, newRecipe], // Add the new recipe to the existing array.
    })),

  // 'setRecipes' is an action to completely replace the recipes array.
  // This could be useful for initializing recipes from an API or local storage.
  setRecipes: (recipes) => set({ recipes }),
}));

// Export the custom hook generated by Zustand, which components will use to interact with the store.
export default useRecipeStore;